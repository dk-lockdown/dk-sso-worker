<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dk.sso.worker.oauth2.approvalstore.mapper.ApprovalStoreMapper">
    <insert id="insertApprovalStore" parameterType="com.dk.sso.worker.oauth2.approvalstore.entity.ApprovalData">
        INSERT INTO `oauth_approvals` (
          `expires_at`,
          `status`,
          `last_modified_at`,
          `user_id`,
          `client_id`,
          `scope` )
        VALUES
        ( #{expiresAt,jdbcType=DATE},
          #{status,jdbcType=VARCHAR},now(),
          #{userId,jdbcType=VARCHAR},
          #{clientId,jdbcType=VARCHAR},
          #{scope,jdbcType=VARCHAR}
        )
    </insert>

    <select id="selectFromApprovalStore" resultType="com.dk.sso.worker.oauth2.approvalstore.entity.ApprovalData">
        select
          `expires_at`,
          `status`,
          `last_modified_at`,
          `user_id`,
          `scope`
        from `oauth_approvals`
        where `user_id` =#{userId} and `client_id`=#{clientId}
    </select>

    <delete id="deleteFromApprovalStore">
        delete from `oauth_approvals`
         where `user_id`=#{userId} and `client_id`=#{clientId} and `scope`= #{scope}
    </delete>

    <update id="updateApprovalStore" parameterType="com.dk.sso.worker.oauth2.approvalstore.entity.ApprovalData">
        UPDATE `oauth_approvals`
        SET `expires_at` = #{expiresAt}, `status`=#{status}, `last_modified_at`=now()
        WHERE
            `user_id` = #{userId} and `client_id`=#{clientId} and `scope`= #{scope}
    </update>

</mapper>